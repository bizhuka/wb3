const DEBUG = process.env.DEBUG || process.execArgv.some (a => /--(inspect|debug)/.test (a))
const cds = require('./lib/cds')

module.exports = async (models,o) => {
    // pretty standard stuff... may serve as a template for a custom server.js
    const express = require('express')
    const app = express()

    // TODO node.js
    global.__express = app;

    // mount static resources and common middlewares...
    app.use ('/favicon.ico', express.static (__dirname+'/favicon.ico', {maxAge:'14d'}))
    app.use (express.static (cds.env.folders.app))  //> defaults to ./app
    app.get ('/', (_,res) => res.send (index.html))  //> if none in ./app
    app.use (logger)  //> basic request logging

    // connect to primary database if configured
    await cds.connect (!cds.session && cds.env.requires.db || false)

    // construct and mount modeled services
    await cds.serve (models,o) .in (app)

    // start http server
    const { PORT=4004 } = process.env
    return app.listen (PORT)
}

const {index} = require ('./lib/utils/app/index_html')
const logger = (req,_,next) => { /* eslint-disable no-console */
    console.log (req.method, req.url)
    if (/\$batch/.test(req.url))  req.on ('dispatch', (req) => {
        console.log ('>', req.event, req._.path, req._.query)
        if (DEBUG && req.query) {
            console.log (req.query)
        }
    })
    next()
}

if (!module.parent)  module.exports()
